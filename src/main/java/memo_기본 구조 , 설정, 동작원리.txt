jsp(Java Server Page),

웹 브라우저 - 서버, 인터넷을 이용해서, 웹접근.
서버(웹서버, WAS(톰캣서버))

1. 웹 프로그래밍 기본
1)환경설정
2) 기본 동작 방식
3) Web MVC 방식,

2. JDBC, 웹

3. 세션,쿠키, 필터, 리스너
-----------------------------------
4. 스프링 MVC
================================================

1) 환경 설정, 톰캣 9버전으로 받기.
참고 링크:
https://tomcat.apache.org/download-90.cgi
윈도우즈 10, 64비트 받고,
압축 해제 후, 해당 폴더 위치
- c:\ 밑에 하기.
예) C:\apache-tomcat-9.0.89

2) 인텔리 제이,
-> 새프로젝트 생성 클릭, -> jakarta 프로젝트 선택,(왼쪽 메뉴에서)

-> 이름 : Sample501JSP

-> 위치: 용량 관계상 , D 드라이브로 이사감.
예) D:\JSP_WorkSpace\Sample501JSP

-> 템플릿 : 웹 애플리케이션 , 변경,

-> 애플리케이션 서버 선택: 우리가 다운 받은 9.0.89 톰캣 위치 폴더 선택.

-> 언어 : 자바 선택.

-> 시스템 빌드 : Gradle 선택. (외부 라이브러리 자동 관리툴 )

-> 그룹 : com.busanit501(나중에는 배포시, 실제 구분한 도메인 주소)

-> 아티팩트아이디 : Sample501JSP(기본 프로젝트 이름으로 사용함.)

==============================================================
-> 이슈 발생.
프로젝트 생성시, 9.1 버전 x , jakarta EE 8 버전으로 선택 하기.
==============================================================


확장팩 관련 ,UI 툴
1. Atom Material Icon
폴더 아이콘 , 머터리얼 스타일 적용.
2. GitToolBox
깃 관련 도구 박스.
3. .ignore (오타 수정)
깃에서 제외하는 파일 쉽게 선택 하는 도구.
4. Nyan Progress Bar
고양이 무지개 상태 바 표시
5. Rainbow Brackets
괄호 열고 닫기 할 때, 무지개색

설정 경로 : 파일 -> 세팅 -> 에디터 -> 플로그인
ctrl alt s

실행 테스트 확인, : 1) 오른쪽 상단 톰캣에 보이는 플레이 버튼 클릭.
2) shift + f10 ,
웹브라우저에서, Hello World.

- 실행시, 콘솔 창에보면, 한글 깨짐 현상 보임.

-> 도움말 -> 사용자 지정 VM 옵션 클릭
->  추가할 내용
-Dfile.encoding=UTF-8
-Dconsole.encoding=UTF-8

- 확인시, 인텔리제이 완전 종료 후, 다시 시작.


문제점 제시 : 웹브라우저에서 경로가 너무 길다.
http://localhost:8080/Gradle___com_busanit501___Sample501JSP_1_0_SNAPSHOT_war/

해결책.
-> 오른쪽 상단, 톰캣 아이콘(고양이모양, 화살표 클릭 )
-> 구성 편집 -> 2번째 배포 -> 기본 제거
-> 추가, 이름 맨뒤에 exploded 이런 파일 이름 선택.
-> 애플리케이션 컨텍스트 : 다지우고 , 변경 슬래시 하나 -> /
-> 적용.

다시, 톰캣 서버 시작 후 , 웹브라우저에서 확인.

http://localhost:8080



변경된 코드의 반영 하기. 설정.
코드를 변경 후, 재시작 주로하는데, 자동화 하기.

-> 오른쪽 상단, 톰캣 아이콘(고양이모양, 화살표 클릭 )
-> 구성 편집 -> 첫번째 탭, 서버 이고
하단 메뉴에서

-> VM 옵션 부분에, 한글 인코딩 설정 부분,
-Dfile.encoding=UTF-8

-> 업데이트 액션시 -> 클래스 및 리소스 업데이트

-> 프레임 비활성화시 -> 클래스 및 리소스 업데이트

적용 , 확인.

-> 이슈 발생.
프로젝트 생성시, 9.1 버전 x , jakarta EE 8 버전으로 선택 하기.

설명,
웹 애플리케이션 테크 트리.

구조1, jsp 프로젝트, 서버가 화면을 같이 렌더링

서블릿, -> 자바의 클래스 파일.

jsp(자바 서버 페이지) : html 안에 자바 코드를 주입.
html + java 코드
-> 업체에서, jsp 프로젝트에서, 웹 개발을 하는 업체.

구조2, 스프링 프로젝트 , 서버가 화면을 같이 렌더링

스프링 레거시 (설정이 많음.)

스프링 부트(설정이 많이 자동화, 커스텀 마이징 다 가능함. )

===================================================
구조3, 레스트풀 프로젝트, 데이터 만 전달.
화면을 클라이언트 사이드 렌더링, 프론트 : React, Vue, 모바일

=============================================================

실행 방법
1. http://localhost:8080/index.jsp
http://localhost:8080/hello2.jsp
jsp 파일에 직접 접근.
html + java , 자바코드를 최대한 간단하게 주입 하는 방법론.

2. 서블릿 , (클래스 파일) 접근.
http://localhost:8080/test

결론, 화면에 직접 접근 안함.
항상, 백엔드, 서블릿, 자바파일의 특정 컨트롤러를 이용해서, 화면에 접근.

미니실습.
1. jsp 프로젝트 만들기, -> 서버 톰캣 설정 해보기.
-> MyServlet3 만들어서 실행해보기.
-> 본인의 개인 깃에 , 푸쉬, 풀, 변경사항도 확인 해보기.

2. 이상용 원격지 포크 했고, 이걸 다시, 본인 로컬에
연동 시키기 : 폴더는 문서 -> ServerProgramTest2 ,

3. 로드 해서, 실행 해보기.
===============================================================

GET 방식, POST 방식
GET 방식, 브라우저에서 , URL 주소에 입력하는 형식으로
보내는 방식을 GET 방식.
서버 입장에서는 GET로 통신이 받게됨.
예) http://localhost:8080/my2

데이터 , 주소상에서 노출이 됨.
예2) http://localhost:8080/login?id=lsy&pw=1234

주로 용도, 조회 하거나, 또는 폼(회원가입, 로그인, 게시글 작성,등) 형식에서 사용을함.
장점) 구성이 쉽고, 간단하다.
단점) 특정의 데이터가 외부에 노출이되고, URL 주소의 길이가 한정적임.

POST 방식, 무언가 데이터 처리를 할 때 사용되는 방식.
회원가입 처리, 로그인 처리, 게시글 작성, 수정, 삭제, 처리 할 때 사용.

장점) 데이터의 길이 제한이 없음. 데이터 외부에 노출이 안됨.

데이터 , 주소상에서 노출이 안됨.
예2) http://localhost:8080/login
http 구조에서, 몸통에 데이터가 담겨서 전달이 됨.
https SSL , 보안적인 통신시 사용되는 프로토콜

프로토콜 : 통신을 하기위한 규칙.
http : 구성 1) 헤더 , 2) 바디(실제 데이터 담김),
편지 봉투 : http 헤더, 편지 내용 : http 바디

항상, 2가지 관점. 브라우저(식당손님,요청) <------> 서버(식당의 주방장,응답)

정적 데이터(static, html,css,js,이미지등 ) ,
예) 식당 앱에 들어 가면, 음식 이미지, 식당 이미지 , 항상 고정.
동적 데이터(dynamic, 비즈니스 모델, 게시글 작성할 때, 수정할 때, 삭제할 때 )
예) 식당 앱에서, 후기.

HTTP 메세지 , 크롬 개발자 도구에서, 헤더와 바디 확인 해보기.


비연결성, stateless
서버는, 브라우저의 요청에 대해서, 응답을하고, 끝냄. (자원반납)

서버 사이드 프로그래밍.
1) 동시에 여러 요청에 대한 처리는 어떻게 하나요?
2) 서버에 문제가 발생시 처리 여부?
3) 데이터 전송의 방법론? 연결성, connection pool , 연결하기 위한 객체.
4) 분산 환경에서 처리 문제? 스레드,

jsp -> spring -> spring boot ,위의 이런 고민 문제점등이 다수가 다 해결이 되었음.

GET , POST 방식에 대한 간단한 예제,.

input.jsp 파일에서,
보내느 형식은 post 이지만, 서버에서 받는 코드가 없음.
개발자 도구로 메서드 형식만 확인 했고,
이 파라미터를 받는 방법에 대해서

get, 쿼리 스트링 : ?num1=333&num2=333
파라미터 : num1=333
파라미터 : num2=333

http://localhost:8080/input.jsp?num1=333&num2=333

post
예2) http://localhost:8080/input.jsp

















